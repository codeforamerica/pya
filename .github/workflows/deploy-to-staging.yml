name: Deploy to AWS Staging

on:
  workflow_run:
    workflows: [ "Run tests" ]
    types: [ completed ]
    branches: [ main ]
  workflow_dispatch:
    inputs: { }

jobs:
  ci:
    steps:
      - name: CI workflow
        uses: ./.github/workflows/ci.yml

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          text: "Slack message text. Failure :no_entry:"
          status: ${{ job.status }}
          fields: message,commit,author,eventName,ref,workflow,job,took
          mention: 'here'
          if_mention: failure,cancelled,success
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always()
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: pya-staging-web
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t 300423309117.dkr.ecr.us-east-1.amazonaws.com/pya-staging-web:${{env.IMAGE_TAG}} --platform linux/amd64 .
          docker push 300423309117.dkr.ecr.us-east-1.amazonaws.com/pya-staging-web:${{env.IMAGE_TAG}}

      - name: Update SSM Version Parameter
        run: |
          echo "tag:$IMAGE_TAG"
          aws ssm put-parameter \
            --name  /pya/staging/web/version \
            --value "$IMAGE_TAG" \
            --overwrite
